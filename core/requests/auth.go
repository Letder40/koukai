package requests

import (
	"errors"
	"fmt"
	"net/http"
	"os"
	"strings"
)

func validateJWT(jwt string) error {
	_, err := UserStrapiRequest("/api/users/me", jwt)

	if err != nil {
        println(err.Error())
		return errors.New("validation failled")
	}

	return nil
}

// Check for jwt in cookies and headers
func GetUserJWT(r *http.Request) (string, error) {
	if cookie, err := r.Cookie("jwt"); err == nil {
		if err := validateJWT(cookie.Value); err == nil {
			return cookie.Value, nil
		} else {
			fmt.Println("Cookie JWT validation failed:", err)
		}
	}

	authHeader := r.Header.Get("Authorization")
	if authHeader != "" {
		parts := strings.Split(authHeader, " ")
		if len(parts) == 2 && parts[0] == "Bearer" {
			token := parts[1]
			if err := validateJWT(token); err != nil {
				return "", err
			}
			return token, nil
		}
		return "", errors.New("invalid authorization header")
	}

	return "", errors.New("missing auth")
}

func getAppKey() string {
	appkey, err := os.ReadFile(".api_token")
	if err != nil {
		println("Missing .api_token, it should be generated by deploy.sh, error:", err)
	}

	return string(appkey)
}
